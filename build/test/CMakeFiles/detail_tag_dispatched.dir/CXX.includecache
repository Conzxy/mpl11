#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../include/boost/mpl11/always.hpp
boost/mpl11/detail/either.hpp
-
boost/mpl11/empty_base.hpp
-
boost/mpl11/identity.hpp
-

../include/boost/mpl11/apply_wrap.hpp
boost/mpl11/detail/nested_apply.hpp
-
boost/mpl11/empty_base.hpp
-

../include/boost/mpl11/bool.hpp
boost/mpl11/integral_c.hpp
-

../include/boost/mpl11/categories.hpp

../include/boost/mpl11/detail/always_false.hpp
boost/mpl11/bool.hpp
-

../include/boost/mpl11/detail/either.hpp

../include/boost/mpl11/detail/is_same.hpp
boost/mpl11/bool.hpp
-

../include/boost/mpl11/detail/nested_apply.hpp
boost/mpl11/empty_base.hpp
-
boost/mpl11/identity.hpp
-

../include/boost/mpl11/detail/tag_dispatched.hpp
boost/mpl11/apply_wrap.hpp
-
boost/mpl11/detail/always_false.hpp
-
boost/mpl11/detail/either.hpp
-
boost/mpl11/dispatch.hpp
-
boost/mpl11/tag_of.hpp
-

../include/boost/mpl11/dispatch.hpp

../include/boost/mpl11/empty_base.hpp

../include/boost/mpl11/identity.hpp

../include/boost/mpl11/integral_c.hpp
boost/mpl11/always.hpp
-
boost/mpl11/categories.hpp
-
boost/mpl11/dispatch.hpp
-
boost/mpl11/identity.hpp
-
boost/mpl11/tags.hpp
-

../include/boost/mpl11/tag_of.hpp
boost/mpl11/identity.hpp
-

../include/boost/mpl11/tags.hpp

/Users/ldionne/code/mpl11/test/detail/tag_dispatched.cpp
boost/mpl11/detail/tag_dispatched.hpp
-
boost/mpl11/always.hpp
-
boost/mpl11/detail/is_same.hpp
-
boost/mpl11/dispatch.hpp
-
boost/mpl11/tag_of.hpp
-

