template <typename ...>
struct f { struct type; };

<%= (0...breadth).map { |breadth|
    xs = (0...depth).map { |depth| "x#{breadth}<#{depth}>" }.join(', ')
    <<-EOS
    template <int> struct x#{breadth} { using type = x#{breadth}; };
    using go#{breadth} = map<f, list<#{xs}>>::type;
    EOS
}.join("\n") %>